	
//	the main menu

	//	mostly built with css and wordpress's built in nav walker to generate the html
	//	some additional features are
	//		- mobile menu css
	//		- logo
	//		- logo zoom animation
	//		- multiple sizes
	//		- mega menu

	

	add_shortcode('hc2_nav', 'hc2_nav_shortcode');
	function hc2_nav_shortcode($atts, $content = null) {

		//shortcode properties
		$a = shortcode_atts(array( 
				'fixtop' => '0',
				'menu' => '',				//	you must specify a menu location
				'maxwidth' => '1000px', 		//	set the width to collapse on mobile
				'style' => 'normal', 
				'color' => '', 
				'background' => '',
				'dropdown' => '', 
				'accent' => '', 
				'position' => 'relative', 
				'size' => 'sizeb', 
				'media' => '', 
				'logoscale' => '250', 
				'logopos' => '0', 
				'zoom' => '0' 
			), $atts);
		
		//a menu must be defined
		if( !$a['menu'] )return '';
		
		//capture html as a string
		ob_start(); 
			?>
			
				<nav id="hcube-menu" class="hcube-menu hcube-menu-right hcube-menu-<?php echo $a['style']; ?> hcube-menu-<?php echo $a['size']; ?>" data-full-width="true" style="top:<?php echo $a['fixtop']; ?>px" >
					<div class="hcube-menu-inner">
						<div id="hcube-animtar" class="hcube-menu-logo hcube-animation-wrapper hcube-animation-logo"></div>
						<?php echo wp_nav_menu(array('walker' => new rc_scm_walker,'echo' => false,'theme_location' => $a['menu'],'items_wrap' => '<ul id="%1$s" class="%2$s">%3$s</ul>')); ?>
					</div>
					<div class="hcube-hamburger" aria-label="Menu" tabIndex="0" role="button" data-vars-name="Hamburger Menu" on="tap:hcube-menu.toggleClass(class=hcube-menu-open)"><i class="fas fa-bars"></i></div>
					
					<style>
						.hcube-menu-open > .hcube-hamburger {background: <?php echo $a['dropdown']; ?> !important;}
						nav#hcube-menu.hcube-menu-normal .hcube-menu-logo{background-image: url(<?php echo $a['media']; ?>);}
						nav#hcube-menu.hcube-menu-sizea > div > div > ul > li > [data-mega]{top:51px}
						nav#hcube-menu.hcube-menu-sizeb > div > div > ul > li > [data-mega]{top:65px}
						nav#hcube-menu > div > div > ul > li.hcube-menu-open > a {border-top: 3px solid <?php echo $a['accent']; ?>;}
						nav#hcube-menu.hcube-menu-normal  [data-button="true"]{background: <?php echo $a['accent']; ?>;}
						<?php if( $a['position']=='sticky' ){ ?>.hcube-content nav#hcube-menu{position: sticky;position: -webkit-sticky;position: -moz-sticky;position: -ms-sticky;position: -o-sticky;top: 0;}<?php } ?>
						<?php if( $a['position']=='fixed' ){ ?>.hcube-content nav#hcube-menu{position: fixed;top: 0;}<?php } ?>
						nav#hcube-menu .hcube-menu-logo{height:70px;}
						nav#hcube-menu.hcube-menu-normal > div {text-align: right;}
						nav#hcube-menu.hcube-menu-normal > div > div {display:inline-block;}
						nav#hcube-menu,#hcube-menu a,nav#hcube-menu,#hcube-menu li{color:<?php echo $a['color']; ?>;}
						nav#hcube-menu {background-color:<?php echo $a['background']; ?>;}
						nav#hcube-menu.hcube-menu-normal {z-index: 999999999;}
						nav#hcube-menu.hcube-menu-open {z-index: 9999999999;}
						nav#hcube-menu ul.sub-menu {background: <?php echo $a['dropdown']; ?> ;}
						nav#hcube-menu li.hcube-menu-open > ul.sub-menu {border-bottom: 1px solid <?php echo $a['accent']; ?>;border-top: 3px solid <?php echo $a['accent']; ?> ;}
						nav#hcube-menu ul ul li.hcube-menu-open > ul.sub-menu {border-left: 1px solid <?php echo $a['accent']; ?>;border-right: 1px solid <?php echo $a['accent']; ?>;}
						nav#hcube-menu li.menu-item-has-children > a:after {border-left: 3px solid <?php echo $a['accent']; ?>;border-bottom: 3px solid <?php echo $a['accent']; ?>;}
						nav#hcube-menu a > i {color:<?php echo $a['accent']; ?>}
						nav#hcube-menu .sub-menu li.hcube-menu-open > a, nav#hcube-menu .sub-menu li.hcube-menu-open > a > i {color: white;    padding-right: 30px;}
						nav#hcube-menu .sub-menu li.hcube-menu-open > a:not(#_) {background: <?php echo $a['accent']; ?>;    padding-left: 30px;}
						nav#hcube-menu li.menu-item:not(.hcube-menu-open) li > a {padding-left: 0;padding-right: 0;}
						nav#hcube-menu > div > div > ul > li > a > i { display:none;}
						nav#hcube-menu.hcube-menu-sizeb ul ul a > i {padding-right: 27px;}
						nav#hcube-menu.hcube-menu-sizeb ul ul a {padding-left: 27px;}
						nav#hcube-menu.hcube-menu-sizeb .sub-menu li.hcube-menu-open > a > i {padding-right: 37px;}
						nav#hcube-menu.hcube-menu-sizeb .sub-menu li.hcube-menu-open > a {padding-left: 37px;}
						@media (min-width:<?php echo $a['maxwidth']; ?>){
							nav#hcube-menu.hcube-menu-sizea .hcube-menu-logo{height:55px;}
							nav#hcube-menu li.menu-item > a:hover, nav#hcube-menu li.menu-item.hcube-menu-open > a{    background: rgba(0,0,0,.2);}
							nav#hcube-menu.hcube-menu-sizea.hcube-menu-normal {height: 55px;}
							nav#hcube-menu.hcube-menu-sizeb.hcube-menu-normal {height: 70px;}
							nav#hcube-menu.hcube-menu-normal.hcube-menu-right .hcube-menu-logo{background-position: 20px center;left: 0;right:auto;transform-origin:top left;}
							nav#hcube-menu.hcube-menu-normal.hcube-menu-left .hcube-menu-logo{background-position: calc( 100% - 20px ) center;right: 0;left:auto;transform-origin:top right;}
							nav#hcube-menu.hcube-menu-normal > div > div > ul > li > ul.sub-menu{left:auto;right:auto;right:0;}
							nav#hcube-menu > div > div > ul > li > ul > li > a:not(#_):not(#_):hover {background: linear-gradient( 90deg,rgba(0,0,0,.2),transparent) }
							nav#hcube-menu > div > div > ul > li > ul > li.hcube-menu-open > a:not(#_):not(#_) {background: linear-gradient( 90deg,<?php echo $a['accent']; ?>,transparent) }
							nav#hcube-menu.hcube-menu-sizea ul ul .sub-menu {left: 55px;}
							nav#hcube-menu.hcube-menu-sizeb ul ul .sub-menu {left: 70px;}
							nav#hcube-menu > div > div > ul > li > a[href],nav#hcube-menu > div > div > ul > li.menu-item > a{color: <?php echo $a['color']; ?>;    opacity: 1;}
						}
						@media (max-width:<?php echo $a['maxwidth']; ?>){
							nav#hcube-menu.hcube-menu-sizeb a > i {padding-right: 27px;}
							nav#hcube-menu.hcube-menu-sizeb a {padding-left: 27px;}
							nav#hcube-menu.hcube-menu-normal .hcube-menu-logo{background-position: 20px center;left: 0;right:auto;transform-origin:top left;}
							nav#hcube-menu.hcube-menu-normal [data-button="true"]{background: transparent;}
							nav#hcube-menu .hcube-mega-media {display:none;}
							nav#hcube-menu.hcube-menu-normal > div > div > ul > li.hcube-mega-menu > ul > li{width:100%;}
							nav#hcube-menu ul ul{    margin: -3px 0 0 0;}
							nav#hcube-menu.hcube-menu-sizea > div > div > ul > li > ul.sub-menu {    margin-top: -55px;left: 55px;}
							nav#hcube-menu.hcube-menu-sizeb > div > div > ul > li > ul.sub-menu {    margin-top: -70px;left: 70px;}
							nav#hcube-menu li.hcube-menu-open > a, nav#hcube-menu li.hcube-menu-open > a > i {color: white;  }
							nav#hcube-menu li.hcube-menu-open > a {background: <?php echo $a['accent']; ?>;    }
							nav#hcube-menu.hcube-menu-sizea ul ul .sub-menu a {padding-left: 30px;}
							nav#hcube-menu.hcube-menu-sizeb ul ul .sub-menu a {padding-left: 37px;}
							nav#hcube-menu > div > div > ul > li > a > i { display:inline-block;}
							nav#hcube-menu ul.menu {border-top: 3px solid transparent;border-bottom: 1px solid transparent;}
							nav#hcube-menu ul.menu{margin-top: 70px;}
							nav#hcube-menu ul.menu {position: absolute;    left: 0;    top: 0;width: 0;transition: all .3s;overflow: hidden;margin-bottom: 0;background-color:<?php echo $a['dropdown']; ?>;padding: 0px;box-sizing: border-box;}
							nav#hcube-menu.hcube-menu-open ul.menu {overflow:visible;width: 100%;    box-shadow: 0 30px 30px -20px #000;border-top: 3px solid <?php echo $a['accent']; ?>;border-bottom: 1px solid <?php echo $a['accent']; ?>;}
							nav#hcube-menu li.hcube-menu-open > ul.sub-menu {width:calc( 100% - 70px );}
							nav#hcube-menu div.hcube-hamburger{color:<?php echo $a['accent']; ?>;display: block;position: absolute;right: 13px;top: 15px;background: none !important;font-size: 28px;cursor: pointer;height: auto !important;outline: none;padding: 5px 10px;}
							nav#hcube-menu.hcube-menu-open li:before{display:inline}
							nav#hcube-menu ul.menu li {display: block;padding: 0;}
							nav#hcube-menu.hcube-menu-open ul.menu li:before {margin-right: 8px;	}
							nav#hcube-menu.hcube-menu-open > div > div {width: 100%;	    float: none;    display: inline-block;    overflow: hidden;}
							nav#hcube-menu.hcube-menu-normal {height: 70px;padding: 0;    overflow: visible;}
							nav#hcube-menu.hcube-menu-normal > div {height: 70px;background-size: auto 40px;}
							nav#hcube-menu:not(.hcube-menu-open) .sub-menu {width:0;}
							nav#hcube-menu.hcube-menu-normal.hcube-menu-open > .hcube-menu-inner {overflow-y: scroll;overflow-x: hidden;height: 100vh;}
							nav#hcube-menu ul ul li.hcube-menu-open > ul.sub-menu {position: relative;display: inline-block;width: 100%;}
						}
						@media (max-width:450px){
							div#hcube-animtar:not(#_) {max-width: calc(<?php echo (10000/$a['logoscale'])+'% - '+(10000/$a['logoscale']); ?>px );margin-left: 25px;background-size: contain;background-position: 50% 50%;}
						}
						<?php if( $a['zoom'] ){ ?>
							nav#hcube-menu .hcube-animation-logo{transform: translate(0px,0px) scale(2.5);}
							nav#hcube-menu .hcube-menu-open > .hcube-hamburger {background:inherit !important;}
						<?php } ?>
					</style>
					
				</nav>
				
				<div class="hcube-menu-outer">
					<?php if( $a['zoom'] ){ ?>
						<amp-animation id="hcube-anima" layout="nodisplay" ><script type="application/json">{ "direction": "alternate", "duration": "300", "delay": 0, "fill": "both", "selector": "#hcube-animtar", "keyframes": {"easing": "ease-out", "transform": "scale(1) translate(0,0)"} }</script></amp-animation>
						<amp-animation id="hcube-animb" layout="nodisplay" ><script type="application/json">{ "direction": "alternate", "duration": "300", "delay": 0, "fill": "both", "selector": "#hcube-animtar", "keyframes": {"easing": "ease-out", "transform": "scale(<?php echo $a['logoscale']/100; ?>) translate(0px,<?php echo $a['logopos']; ?>px)"} }</script></amp-animation>
						<amp-position-observer intersection-ratios="0" on="exit:hcube-anima.start;enter:hcube-animb.start" layout="nodisplay"></amp-position-observer>
					<?php } ?>
				</div>
				
			<?php

		return ob_get_clean(); //output the html

	}
 
	add_action('wp_head', function() {
		?>
			<style>
			
				.menu-item {display: inline-block;vertical-align: top;float: none;text-align: left;}	
				nav.hcube-menu a{line-height: 1.6 !important;}
				li.menu-item a {	font-size: 14px;  }
				.hcube-menu-normal .hcube-menu-logo{background-size: auto 70%;background-position: 20px center;background-repeat: no-repeat;position: absolute;width: 450px;pointer-events:none;left: 0;top: 0;}
				nav.hcube-menu-normal ul.menu{margin:0;}
				nav.hcube-menu-sizeb,nav.hcube-menu-sizeb > div{height: 70px;}
				nav.hcube-menu-sizeb li.menu-item > a {padding: 1.2em 20px;height: 70px;box-sizing: border-box;}
				.sub-menu .hcube-mega-media {top: 0;}
				.hcube-menu-sizeb > div > div > ul > li > .hcube-mega-media {top: 80px;}
				.hcube-menu-open > .hcube-mega-media {opacity: 1;pointer-events: initial;}
				nav.hcube-menu.hcube-menu-sizea > div > div > ul > li.hcube-menu-open > a {padding-top: calc( 1.2em - 3px );}
				nav.hcube-menu.hcube-menu-sizeb > div > div > ul > li.hcube-menu-open > a {padding-top: calc( 1.2em - 3px );}
				nav.hcube-menu > div > div > ul > li > a {transition: color .3s;}
				.hcube-mega-media > div {top: 50%;transform: translatey(-50%);}
				.hcube-mega-media {white-space: initial;}
				.hcube-menu-open li li .hcube-menu-exit {position: absolute;}
				:root:not(#_):not(#_):not(#_):not(#_):not(#_) .hcube-mega-media > div {background-color: transparent;}
				.hcube-mega-media { overflow:hidden;   position: absolute;right: 0;top: 65px;  width: 60%;height: 100%;opacity: 0;pointer-events: none;transition: all .3s;z-index: 1000000;}
				.sub-menu .hcube-mega-media {padding-left: 70px;box-sizing: border-box;}
				.hcube-menu-subopen > li > .hcube-mega-media {opacity: 0;pointer-events: none;}
				nav.hcube-menu.hcube-menu-normal > div > div > ul > li.hcube-mega-menu.hcube-menu-open > ul.sub-menu {left: 0;width: 100%;}
				nav.hcube-menu.hcube-menu-normal > div > div > ul > li.hcube-mega-menu > ul > li, nav.hcube-menu.hcube-menu-normal> div > div > ul > li.hcube-mega-menu li.hcube-menu-open> ul {width: 40%;}
				nav.hcube-menu .sub-menu li {display: block;width: 100%;}
				nav.hcube-menu ul{z-index: 100000;}
				nav.hcube-menu .sub-menu {border-top:3px solid transparent;border-left:0px solid transparent;border-bottom:1px solid transparent;}
				nav.hcube-menu>div>div>ul>li>ul>li>ul {margin: -3px 0 0 0;position: absolute;z-index: 10000000;width: 0%;overflow: hidden;transition: all .5s;display: block;height: auto;opacity: 1;visibility: visible;padding:0;}
				nav.hcube-menu>div>div>ul>li>ul, 
				nav.hcube-menu>div>div>ul>li>ul>li>ul {box-shadow: 0 30px 30px -20px #000;}
				nav.hcube-menu > div > div >ul>li>ul>li.hcube-menu-open>ul {width: 100%;z-index: 10000;}
				nav.hcube-menu>div{position: relative;}
				nav.hcube-menu>div>div>ul>li>ul {position: absolute;padding-left:0;right:0;width: 0%;overflow: hidden;transition: all .3s;visibility: visible;opacity: 1;margin-bottom:300px !important;}
				.hcube-menu-open > .hcube-hamburger {width: 100%;padding: 20px 23px 18px !important;top: 0 !important;right: 0 !important;border-bottom: 3px solid;}
				.hcube-hamburger{ transition:background .2s;}
				li.menu-item-has-children > a:after {width: 5px;content: '';height: 5px;transform: rotate(-45deg);margin-left: 13px;top: -3px;position: relative;display: inline-block;transition: all .3s;}
				li.menu-item > a > i{transition: all .3s;}
				li.menu-item > a {transition: all .3s;       padding: 1.2em 20px;height: 55px;box-sizing: border-box;font-size: 15px;display: block;    overflow: hidden;}
				nav.hcube-menu-sizeb li.menu-item > a {font-size: 18px;}
				li.menu-item a i {padding-right: 20px;width: 15px;text-align: center;}
				.hcube-menu-exit, li#wp-admin-bar-new-amp {display: none;    opacity: 0;}
				.hcube-menu-open > .hcube-menu-exit {position: fixed;left: 0;top: 0;width: 100%;height: 100%;display: block;z-index: 2;}
				li.menu-item {padding: 0;}
				nav.hcube-menu>div>div >ul> li.hcube-menu-open > ul.sub-menu {width: 400px;overflow: visible;}
				div.hcube-content > *:not([data-full-width='true']),div.hcube-menu-inner{box-sizing: border-box;max-width:1200px;margin-left: auto;    margin-right: auto;}
				.hcube-menu-inner{height:100%;}
				.hcube-menu-inner > div,.hcube-menu-inner > div > ul,.hcube-menu-inner > div > ul > li > ul > li{position: initial;}
				.hcube-mega-menu {position: initial;}
				nav.hcube-menu-normal{position:relative;}
				div.hcube-content > nav.hcube-menu > div { padding:0;}
				nav.hcube-menu li:before{display:none}
				nav.hcube-menu{width:100%;}
				ul.menu {list-style: none;white-space:nowrap}
				li.menu-item {display: inline-block;}
				li.menu-item a {color: black;text-decoration: none;}
				div.hcube-hamburger{display:none;}
				li.menu-item a {	font-size: 14px;  }
				nav.hcube-menu-normal ul.menu{margin:0;}
				nav.hcube-menu-sizeb.hcube-menu-normal,nav.hcube-menu-sizeb.hcube-menu-normal > div{height: 70px;}
			</style>
		<?php
	});
	
	add_action( 'init', 'hc2_register_main_menu' );
	function hc2_register_main_menu() { 
		register_nav_menu('main-menu',__( 'main-menu' ));
		register_nav_menu('main-menu-b',__( 'main-menu-b' ));
		register_nav_menu('main-menu-c',__( 'main-menu-c' ));
		add_post_type_support( 'page', 'excerpt' );
		add_theme_support( 'post-thumbnails' );
	}
	add_action( 'init', 'hc2_create_menus' );
	function hc2_create_menus(){
		$languages = get_hc2('settings','languages');
		if( is_array($languages) )foreach( $languages as $lang )register_nav_menus(array($lang.'-menu' => __( $lang.' Menu' )));
	}
	
	class Walker_Nav_Menu_Edit_Custom extends Walker_Nav_Menu  {
		
		function start_lvl(&$output, $depth = 0, $args = Array()) {}
		function end_lvl(&$output, $depth = 0, $args = Array()) {}

		function start_el(&$output, $item, $depth = 0, $args = Array(), $id = 0) {
			global $_wp_nav_menu_max_depth;
		   
			$_wp_nav_menu_max_depth = $depth > $_wp_nav_menu_max_depth ? $depth : $_wp_nav_menu_max_depth;
		
			$indent = ( $depth ) ? str_repeat( "\t", $depth ) : '';
		
			ob_start();
			$item_id = esc_attr( $item->ID );
			$removed_args = array( 'action', 'customlink-tab', 'edit-menu-item', 'menu-item', 'page-tab', '_wpnonce', );
		
			$original_title = '';
			if ( 'taxonomy' == $item->type ) {
				$original_title = get_term_field( 'name', $item->object_id, $item->object, 'raw' );
				if ( is_wp_error( $original_title ) )
					$original_title = false;
			} elseif ( 'post_type' == $item->type ) {
				$original_object = get_post( $item->object_id );
				$original_title = $original_object->post_title;
			}
		
			$classes = array( 'menu-item menu-item-depth-' . $depth, 'menu-item-' . esc_attr( $item->object ), 'menu-item-edit-' . ( ( isset( $_GET['edit-menu-item'] ) && $item_id == $_GET['edit-menu-item'] ) ? 'active' : 'inactive'),);
		
			$title = $item->title;
		
			if ( ! empty( $item->_invalid ) ) {
				$classes[] = 'menu-item-invalid';
				$title = sprintf( __( '%s (Invalid)' ), $item->title );
			} elseif ( isset( $item->post_status ) && 'draft' == $item->post_status ) {
				$classes[] = 'pending';
				$title = sprintf( __('%s (Pending)'), $item->title );
			}
		
			$title = empty( $item->label ) ? $title : $item->label;
		
			?>
			<style>
			p.field-custom.description:not(.description-thin) {text-align: right;margin-right: 20px;}
			p.field-custom.description:not(.description-thin) input {float: right;margin: 4px;height: 15px;width: 15px;}
			p.field-custom.description:not(.description-thin) input:before {height: 20px;width: 20px;margin-left: -4px;}
			</style>
			<li id="menu-item-<?php echo $item_id; ?>" class="<?php echo implode(' ', $classes ); ?>">
				<dl class="menu-item-bar">
					<dt class="menu-item-handle">
						<span class="item-title"><?php echo esc_html( $title ); ?></span>
						<span class="item-controls">
							<span class="item-type"><?php echo esc_html( $item->type_label ); ?></span>
							<span class="item-order hide-if-js">
								<a href="<?php echo wp_nonce_url( add_query_arg( array( 'action' => 'move-up-menu-item', 'menu-item' => $item_id, ), remove_query_arg($removed_args, admin_url( 'nav-menus.php' ) ) ), 'move-menu_item' ); ?>" class="item-move-up"><abbr title="<?php esc_attr_e('Move up'); ?>">&#8593;</abbr></a>
								| <a href="<?php echo wp_nonce_url( add_query_arg( array( 'action' => 'move-down-menu-item', 'menu-item' => $item_id, ), remove_query_arg($removed_args, admin_url( 'nav-menus.php' ) ) ), 'move-menu_item' ); ?>" class="item-move-down"><abbr title="<?php esc_attr_e('Move down'); ?>">&#8595;</abbr></a>
							</span>
							<a class="item-edit" id="edit-<?php echo $item_id; ?>" title="<?php esc_attr_e('Edit Menu Item'); ?>" href="<?php echo ( isset( $_GET['edit-menu-item'] ) && $item_id == $_GET['edit-menu-item'] ) ? admin_url( 'nav-menus.php' ) : add_query_arg( 'edit-menu-item', $item_id, remove_query_arg( $removed_args, admin_url( 'nav-menus.php#menu-item-settings-' . $item_id ) ) ); ?>"></a>
						</span>
					</dt>
				</dl>
		
				<div class="menu-item-settings" style='min-height:110px;' id="menu-item-settings-<?php echo $item_id; ?>">
					<?php if( 'custom' == $item->type ) : ?>
						<p class="field-url description description-wide">
							<label for="edit-menu-item-url-<?php echo $item_id; ?>">
								<?php _e( 'URL' ); ?><br />
								<input type="text" id="edit-menu-item-url-<?php echo $item_id; ?>" class="widefat code edit-menu-item-url" name="menu-item-url[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->url ); ?>" />
							</label>
						</p>
					<?php endif; ?>
					<p class="description description-thin"><label for="edit-menu-item-title-<?php echo $item_id; ?>"><?php _e( 'Navigation Label' ); ?><br />
							<input type="text" id="edit-menu-item-title-<?php echo $item_id; ?>" class="widefat edit-menu-item-title" name="menu-item-title[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->title ); ?>" /></label></p>
					<p class="field-link-target description"><label for="edit-menu-item-target-<?php echo $item_id; ?>">
							<input type="checkbox" id="edit-menu-item-target-<?php echo $item_id; ?>" value="_blank" name="menu-item-target[<?php echo $item_id; ?>]"<?php checked( $item->target, '_blank' ); ?> /><?php _e( 'Open link in a new window/tab' ); ?></label></p>
					<p class="field-css-classes description description-thin"><label for="edit-menu-item-classes-<?php echo $item_id; ?>"><?php _e( 'CSS Classes (optional)' ); ?><br />
							<input type="text" id="edit-menu-item-classes-<?php echo $item_id; ?>" class="widefat code edit-menu-item-classes" name="menu-item-classes[<?php echo $item_id; ?>]" value="<?php echo esc_attr( implode(' ', $item->classes ) ); ?>" /></label></p>
					<p class="field-xfn description description-thin"><label for="edit-menu-item-xfn-<?php echo $item_id; ?>"><?php _e( 'Link Relationship (XFN)' ); ?><br />
							<input type="text" id="edit-menu-item-xfn-<?php echo $item_id; ?>" class="widefat code edit-menu-item-xfn" name="menu-item-xfn[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->xfn ); ?>" /></label></p>
					<p class="field-description description description-wide"><label for="edit-menu-item-description-<?php echo $item_id; ?>"><?php _e( 'Description' ); ?><br />
							<textarea id="edit-menu-item-description-<?php echo $item_id; ?>" class="widefat edit-menu-item-description" rows="3" cols="20" name="menu-item-description[<?php echo $item_id; ?>]"><?php echo esc_html( $item->description ); ?></textarea><span class="description"><?php _e('The description will be displayed in the menu if the current theme supports it.'); ?></span></label></p>	  
					
					<p class="field-custom description description-thin"><label for="edit-menu-item-mediaid-<?php echo $item_id; ?>"><?php _e( 'Media Block ID' ); ?><br />
							<input type="text" id="edit-menu-item-mediaid-<?php echo $item_id; ?>" class="widefat code edit-menu-item-custom" name="menu-item-mediaid[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->mediaid ); ?>" /></label></p>
					<p class="field-custom description description-thin"><label for="edit-menu-item-faicon-<?php echo $item_id; ?>"><?php _e( 'Font Awesome Icon' ); ?><br />
							<input type="text" id="edit-menu-item-faicon-<?php echo $item_id; ?>" class="icon-class-input widefat code edit-menu-item-custom" name="menu-item-faicon[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->faicon ); ?>" /><span class="demo-icon <?php echo esc_attr( $item->faicon ); ?>"></span></label></p>
					<p class="field-custom description"><label for="edit-menu-item-ext-<?php echo $item_id; ?>">
							<input type="checkbox" id="edit-menu-item-ext-<?php echo $item_id; ?>" value="_blank" name="menu-item-ext[<?php echo $item_id; ?>]"<?php checked( $item->ext, '_blank' ); ?> /><?php _e( 'Is Heading' ); ?></label></p>
				
					<?php if($depth==0){ ?>
						<?php 
							$languages = get_hc2('settings','languages');
							if( ($languages) && count($languages) > 1 ){ ?>
								<p class="field-custom description"><label for="edit-menu-item-lang-<?php echo $item_id; ?>">
									<input type="checkbox" id="edit-menu-item-lang-<?php echo $item_id; ?>" value="_blank" name="menu-item-lang[<?php echo $item_id; ?>]"<?php checked( $item->lang, '_blank' ); ?> /><?php _e( 'Is Language Button' ); ?></label></p>
						<?php } ?>
						<p class="field-custom description"><label for="edit-menu-item-mega-<?php echo $item_id; ?>">
							<input type="checkbox" id="edit-menu-item-mega-<?php echo $item_id; ?>" value="_blank" name="menu-item-mega[<?php echo $item_id; ?>]"<?php checked( $item->mega, '_blank' ); ?> /><?php _e( 'Mega Menu' ); ?></label></p>
						<p class="field-custom description"><label for="edit-menu-item-button-<?php echo $item_id; ?>">
							<input type="checkbox" id="edit-menu-item-button-<?php echo $item_id; ?>" value="_blank" name="menu-item-button[<?php echo $item_id; ?>]"<?php checked( $item->button, '_blank' ); ?> /><?php _e( 'Display as Button' ); ?></label></p>
					<?php } ?>
					
					<div class="menu-item-actions description-wide submitbox">
						<?php if( 'custom' != $item->type && $original_title !== false ) : ?>
							<p class="link-to-original"><?php printf( __('Original: %s'), '<a href="' . esc_attr( $item->url ) . '">' . esc_html( $original_title ) . '</a>' ); ?></p>
						<?php endif; ?>
						<a class="item-delete submitdelete deletion" id="delete-<?php echo $item_id; ?>" href="<?php echo wp_nonce_url( add_query_arg( array( 'action' => 'delete-menu-item', 'menu-item' => $item_id, ), remove_query_arg($removed_args, admin_url( 'nav-menus.php' ) ) ), 'delete-menu_item_' . $item_id); ?>"><?php _e('Remove'); ?></a> 
						<span class="meta-sep"> | </span> 
						<a class="item-cancel submitcancel" id="cancel-<?php echo $item_id; ?>" href="<?php echo esc_url( add_query_arg( array('edit-menu-item' => $item_id, 'cancel' => time()), remove_query_arg( $removed_args, admin_url( 'nav-menus.php' ) ) ) );?>#menu-item-settings-<?php echo $item_id; ?>"><?php _e('Cancel'); ?></a>
					</div>
		
					<input class="menu-item-data-db-id" type="hidden" name="menu-item-db-id[<?php echo $item_id; ?>]" value="<?php echo $item_id; ?>" />
					<input class="menu-item-data-object-id" type="hidden" name="menu-item-object-id[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->object_id ); ?>" />
					<input class="menu-item-data-object" type="hidden" name="menu-item-object[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->object ); ?>" />
					<input class="menu-item-data-parent-id" type="hidden" name="menu-item-parent-id[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->menu_item_parent ); ?>" />
					<input class="menu-item-data-position" type="hidden" name="menu-item-position[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->menu_order ); ?>" />
					<input class="menu-item-data-type" type="hidden" name="menu-item-type[<?php echo $item_id; ?>]" value="<?php echo esc_attr( $item->type ); ?>" />
				</div>
				<ul class="menu-item-transport"></ul>
			<?php
			
			$output .= ob_get_clean();
			

		}
	}

	class rc_sweet_custom_menu {
		
		function __construct() {
			add_filter( 'wp_setup_nav_menu_item', array( $this, 'rc_scm_add_custom_nav_fields' ) );
			add_action( 'wp_update_nav_menu_item', array( $this, 'rc_scm_update_custom_nav_fields'), 10, 3 );
			add_filter( 'wp_edit_nav_menu_walker', array( $this, 'rc_scm_edit_walker'), 10, 2 );
		} 
		
		function rc_scm_add_custom_nav_fields( $menu_item ) {
			$menu_item->mediaid = get_post_meta( $menu_item->ID, '_menu_item_mediaid', true );
			$menu_item->faicon = get_post_meta( $menu_item->ID, '_menu_item_faicon', true );
			$menu_item->mega = get_post_meta( $menu_item->ID, '_menu_item_mega', true );
			$menu_item->lang = get_post_meta( $menu_item->ID, '_menu_item_lang', true );
			$menu_item->button = get_post_meta( $menu_item->ID, '_menu_item_button', true );
			$menu_item->ext = get_post_meta( $menu_item->ID, '_menu_item_ext', true );
			return $menu_item;
		}
		
		function rc_scm_update_custom_nav_fields( $menu_id, $menu_item_db_id, $args ) {
			if ( array_key_exists('menu-item-mediaid',$_REQUEST) && is_array( $_REQUEST['menu-item-mediaid']) ) {
				$mediaid_value = $_REQUEST['menu-item-mediaid'][$menu_item_db_id];
				update_post_meta( $menu_item_db_id, '_menu_item_mediaid', $mediaid_value );
			}
			if ( array_key_exists('menu-item-faicon',$_REQUEST) && is_array( $_REQUEST['menu-item-faicon']) ) {
				$faicon_value = $_REQUEST['menu-item-faicon'][$menu_item_db_id];
				update_post_meta( $menu_item_db_id, '_menu_item_faicon', $faicon_value );
			}
			if ( array_key_exists('menu-item-lang',$_REQUEST) && is_array( $_REQUEST['menu-item-lang']) ) {
				$lang_value = $_REQUEST['menu-item-lang'][$menu_item_db_id];
				update_post_meta( $menu_item_db_id, '_menu_item_lang', $lang_value );
			}
			update_post_meta( $menu_item_db_id, '_menu_item_mega', ( array_key_exists('menu-item-mega',$_REQUEST) && array_key_exists($menu_item_db_id,$_REQUEST['menu-item-mega']) ) ? '_blank' : '' ); 
			update_post_meta( $menu_item_db_id, '_menu_item_button', ( array_key_exists('menu-item-button',$_REQUEST) && array_key_exists($menu_item_db_id,$_REQUEST['menu-item-button']) ) ? '_blank' : '' ); 
			update_post_meta( $menu_item_db_id, '_menu_item_ext', ( array_key_exists('menu-item-ext',$_REQUEST) && array_key_exists($menu_item_db_id,$_REQUEST['menu-item-ext']) ) ? '_blank' : '' ); 

		}
		
		function rc_scm_edit_walker($walker,$menu_id) {
			return 'Walker_Nav_Menu_Edit_Custom';
		}
		
	}

	$GLOBALS['sweet_custom_menu'] = new rc_sweet_custom_menu();
	
	class rc_scm_walker extends Walker_Nav_Menu
	{
		function start_el(&$output, $item, $depth = 0, $args = Array(), $id = 0)
		{
		   $uid = uniqid (rand(),false);
		   
	     $indent = ( $depth ) ? str_repeat( "\t", $depth ) : '';

	     $class_names = $value = '';

	     $classes = empty( $item->classes ) ? array() : (array) $item->classes;

	     $class_names = ' class="';
	     $class_names .= esc_attr( join( ' ', apply_filters( 'nav_menu_css_class', array_filter( $classes ), $item ) ) );
	     $class_names .= ! empty( $item->mega ) 	? ' hcube-mega-menu' : '';
	     $class_names .= '"';

		   $is_button = '';
		   if(! empty( $item->button ) && $depth == 0 ) $is_button = ' data-button="true" ';
	     $output .= $indent . '<li id="menu-item-'.$uid.'-'. $item->ID . '"' . $value . $class_names . $is_button . '>';

	     $attributes  = ! empty( $item->attr_title ) ? ' title="'  . esc_attr( $item->attr_title ) .'"' : '';
	     $attributes .= ! empty( $item->target )     ? ' target="' . esc_attr( $item->target     ) .'"' : '';
	     $attributes .= ! empty( $item->xfn )	  ? ' rel="'    . esc_attr( $item->xfn	  ) .'"' : '';
		   
		   
		   $href = esc_attr( $item->url );
		   
	     $attributes .= !empty( $item->url ) && empty( $item->ext ) && empty( $item->lang ) ? ' data-vars-name="Menu Item - '.$item->title.'" href="' . $href . '"' : '';
	     $attributes .= !empty( $item->lang ) ? ' data-vars-name="Menu Item - '.$item->title.'" href="' . get_site_url() .'/'. get_post_meta( get_post_meta( get_the_ID(), 'hcube_mainpage', true), 'hcube_eq_page_'.strtolower($item->title), true ) . '"' : '';
		   
		   if(strpos( $class_names, 'has-children') !== false){
				$attributes .= ' tabindex=0 role=button aria-label="'.$item->title.'" data-vars-name="Open Menu - '.$item->title.'" on="tap:menu-item-'.$uid.'-'.$item->ID.'.toggleClass(class=hcube-menu-open),menu-'.$args->menu->slug.'.toggleClass(class=hcube-menu-subopen-'.$uid.'-'.$item->ID.')';
				if($depth != 0) $attributes .= ',menu-'.$args->menu->slug.'.toggleClass(class=hcube-menu-subopen)';
				$attributes .= '"' ;
		   }

	     $description  = ! empty( $item->description ) ? '<span>'.esc_attr( $item->description ).'</span>' : '';

	     if($depth != 0){ $description = $append = $prepend = ""; }

		$item_output = $args->before;
			
		$item_output .= '<div class="hcube-menu-exit" aria-label="'.$item->title.'" tabindex=0 role=button data-vars-name="Close Menu - '.$item->title.'"  on="tap:menu-item-'.$uid.'-'.$item->ID.'.toggleClass(class=hcube-menu-open),menu-'.$args->menu->slug.'.toggleClass(class=hcube-menu-subopen-'.$uid.'-'.$item->ID.')';
			if($depth != 0) $item_output .= ',menu-'.$args->menu->slug.'.toggleClass(class=hcube-menu-subopen)';
			$item_output .= '"></div>';
			
		$item_output .= '<a'. $attributes .'>';
		$item_output .= '<i class="'.$item->faicon.'"></i>';
		$item_output .= $args->link_before .apply_filters( 'the_title', $item->title, $item->ID );
		$item_output .= $description.$args->link_after;
		$item_output .= '</a>';
			if($depth == 1) $item_output .= '<style>
				.hcube-menu-subopen-'.$uid.'-'.$item->ID.' > .hcube-menu-open > ul > li:not(#menu-item-'.$uid.'-'.$item->ID.') > a,
				.hcube-menu-subopen-'.$uid.'-'.$item->ID.' > .hcube-menu-open > ul > li:not(#menu-item-'.$uid.'-'.$item->ID.') > a:after 
					{ opacity:.5; }
			</style>';
			if($depth == 0) $item_output .= '<style>
				.hcube-menu-subopen-'.$uid.'-'.$item->ID.' > li:not(#menu-item-'.$uid.'-'.$item->ID.') > a,
				.hcube-menu-subopen-'.$uid.'-'.$item->ID.' > li:not(#menu-item-'.$uid.'-'.$item->ID.') > a:after 
					{ opacity:.5; }
			</style>';
			
		$item_output .= $args->after;
			
			$submenus = $depth == 0 ? get_posts( array( 'post_type' => 'nav_menu_item', 'numberposts' => -1, 'orderby' => 'menu_order', 'order' => 'ASC', 'meta_query' => array( array( 'key' => '_menu_item_menu_item_parent', 'value' => $item->ID ) ) ) ) : false;
			
			if(! empty( $item->mediaid ) ){
				$item_output .= '<div class="hcube-mega-media" data-mega="'.$uid.'" >';
					$looop = parse_blocks( get_the_content(null,null,get_hc2('settings','megamenu_post_id')) );
					foreach($looop as $lop){
						 if(array_key_exists("mediaid", $lop["attrs"]) && $lop["attrs"]["mediaid"]==$item->mediaid){
							 $item_output .= do_shortcode(render_block($lop));
						 }
					}
				if($depth == 0) $item_output .= '<style>.hcube-menu-sizea [data-mega="'.$uid.'"]{height:'.(count( $submenus )*55).'px;}.hcube-menu-sizeb [data-mega="'.$uid.'"]{height:'.(count( $submenus )*70).'px;}</style>';
				$item_output .= '</div>';
			}
			

		$output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args, $id );
	  }
	}
